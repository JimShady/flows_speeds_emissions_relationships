emissions$grid_exactcut_id  <- as.character(emissions$grid_exactcut_id)
emissions$dotref            <- as.character(emissions$dotref)
emissions$pollutant         <- tolower(emissions$pollutant)
emissions <- aggregate(total_emissions ~ gridid + toid + grid_exactcut_id + dotref + length + pollutant, data=emissions, FUN=sum)
##
traffic_flows             <- merge(traffic_flows, road_info, by.x = 'toid', by.y = 'toid')
rm(road_info)
##
grid_traffic              <- merge(traffic_flows, grid, by.x = c('grid_exactcut_id'), by.y = c('grid_exact_cut'))
rm(traffic_flows)
grid_traffic              <- grid_traffic[order(grid_traffic$toid),]
##
emissions_grids              <- merge(emissions, grid, by.x = 'grid_exactcut_id', by.y = 'grid_exact_cut')
rm(emissions)
emissions_grids              <- emissions_grids[order(emissions_grids$toid),]
##
all_data                <- merge(emissions_grids, grid_traffic, by.x = c('toid', 'easting', 'northing'), by.y = c('toid', 'easting', 'northing'))
rm(grid, grid_traffic, emissions_grids,drop)
head(all_data)
models[[1]]
totalall_data$prediction <- NA
for (i in 1:length(sources)) {
all_data[all_data$pollutant == sources[i],'prediction'] <-   predict(models[[i]], all_data[all_data$pollutant == sources[i],])
}
all_data <- all_data[!all_data$desc_term %in% c('Alley', 'Pedestrianised Street', 'Private Road - Publicly Accessible'),]
all_data$prediction <- NA
for (i in 1:length(sources)) {
all_data[all_data$pollutant == sources[i],'prediction'] <-   predict(models[[i]], all_data[all_data$pollutant == sources[i],])
}
ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
no2 <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
nox <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm10 <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm25 <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
nox
no2 <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
nox <- ggplot(all_data[all_data$pollutant == 'nox',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm10 <- ggplot(all_data[all_data$pollutant == 'pm10',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm25 <- ggplot(all_data[all_data$pollutant == 'pm25',], aes(total_emissions, prediction)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
head(all_data)
sum(all_data$total_emissions)
sum(result$total_emissions)
sum(result[result$pollutant %in% sources,$total_emissions)
sum(result[result$pollutant %in% sources,'total_emissions')
sum(result[result$pollutant %in% sources,'total_emissions'])
sum(all_data[all_data$pollutant %in% sources,'total_emissions'])
sum(all_data[all_data$pollutant %in% sources,'total_emissions']) / sum(result[result$pollutant %in% sources,'total_emissions'])
thirteen_to_twentyfive_scale <- sum(all_data[all_data$pollutant %in% sources,'total_emissions']) / sum(result[result$pollutant %in% sources,'total_emissions'])
ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction*thirteen_to_twentyfive_scale)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
thirteen_to_twentyfive_scale_no2  <- sum(all_data[all_data$pollutant == 'no2','total_emissions']) / sum(result[result$pollutant == 'no2','total_emissions'])
thirteen_to_twentyfive_scale_nox  <- sum(all_data[all_data$pollutant == 'nox','total_emissions']) / sum(result[result$pollutant == 'nox','total_emissions'])
thirteen_to_twentyfive_scale_pm10 <- sum(all_data[all_data$pollutant == 'pm10','total_emissions']) / sum(result[result$pollutant == 'pm10','total_emissions'])
thirteen_to_twentyfive_scale_pm25 <- sum(all_data[all_data$pollutant == 'pm25','total_emissions']) / sum(result[result$pollutant == 'pm25','total_emissions'])
no2 <- ggplot(all_data[all_data$pollutant == 'no2',], aes(total_emissions, prediction*thirteen_to_twentyfive_scale_no2)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
nox <- ggplot(all_data[all_data$pollutant == 'nox',], aes(total_emissions, prediction*thirteen_to_twentyfive_scale_nox)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm10 <- ggplot(all_data[all_data$pollutant == 'pm10',], aes(total_emissions, prediction*thirteen_to_twentyfive_scale_pm10)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm25 <- ggplot(all_data[all_data$pollutant == 'pm25',], aes(total_emissions, prediction*thirteen_to_twentyfive_scale_pm25)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
no2
nox
pm10
thirteen_to_twentyfive_scale_pm10
thirteen_to_twentyfive_scale_nox
thirteen_to_twentyfive_scale_pm10
thirteen_to_twentyfive_scale_no2
no2
nox
thirteen_to_twentyfive_scale_pm25
pm25
all_data <- all_data[all_data$pollutant %in% sources,]
##
all_data <- all_data[!(all_data$desc_term %in% c('Alley', 'Private Road - Publicly Accessible', 'Pedestrianised Street')),]
head(result )
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
### Loading any missing libraries
library(rvest)
library(stringr)
library(raster)
library(rgdal)
library(rgeos)
library(ggplot2)
library(sf)
library(rmarkdown)
library(rasterVis)
library(knitr)
library(kableExtra)
library(reshape2)
library(mapview)
require(spatialEco)
require(sp)
library(plotly)
library(MASS)
library(openair)
grid        <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/z_GridsForJames.csv')
grid        <- grid[,c('GridIdEx', 'Easting', 'Northing')]
names(grid) <- c('grid_exact_cut', 'easting', 'northing')
traffic_flows                 <- read.csv('X:/Projects/LAEI2013_Gdrive/TrafficFlows/Major_WithAdjustedIbus_AADT/z_AADT_ExactCut_WithIbus_2013.csv')
names(traffic_flows)          <- tolower(names(traffic_flows))
drop                          <- c('year', 'location_exactcut', 'boroughname_exactcut', 'tlrn', 'irr', 'motorwaynumber', 'petrolcar', 'dieselcar', 'electriccar', 'petrollgv', 'diesellgv', 'electriclgv', 'ltbus', 'coach')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows$toid            <- as.character(traffic_flows$toid)
traffic_flows$total_vehicles  <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car + traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle +     traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
traffic_flows$total_light     <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car)
traffic_flows$total_heavy     <- (traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle + traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2013_LAEI_V117.csv')
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2013_LAEI_V117.csv')
head(emissions)
names(emissions)              <- tolower(names(emissions))
head(emissions)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
### Loading any missing libraries
library(rvest)
library(stringr)
library(raster)
library(rgdal)
library(rgeos)
library(ggplot2)
library(sf)
library(rmarkdown)
library(rasterVis)
library(knitr)
library(kableExtra)
library(reshape2)
library(mapview)
require(spatialEco)
require(sp)
library(plotly)
library(MASS)
library(openair)
grid        <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/z_GridsForJames.csv')
grid        <- grid[,c('GridIdEx', 'Easting', 'Northing')]
names(grid) <- c('grid_exact_cut', 'easting', 'northing')
traffic_flows                 <- read.csv('X:/Projects/LAEI2013_Gdrive/TrafficFlows/Major_WithAdjustedIbus_AADT/z_AADT_ExactCut_WithIbus_2013.csv')
names(traffic_flows)          <- tolower(names(traffic_flows))
drop                          <- c('year', 'location_exactcut', 'boroughname_exactcut', 'tlrn', 'irr', 'motorwaynumber', 'petrolcar', 'dieselcar', 'electriccar', 'petrollgv', 'diesellgv', 'electriclgv', 'ltbus', 'coach')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows$toid            <- as.character(traffic_flows$toid)
traffic_flows$total_vehicles  <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car + traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle +     traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
traffic_flows$total_light     <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car)
traffic_flows$total_heavy     <- (traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle + traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2013_LAEI_V117.csv')
names(emissions)              <- tolower(names(emissions))
drop                          <- c('emissions', 'year', 'petrolcar', 'dieselcar', 'petrollgv', 'diesellgv', 'ltbus', 'coach', 'electriccar', 'electriclgv')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions$total_light_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car
emissions$total_heavy_emissions     <- emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$total_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car + emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$toid                <- as.character(emissions$toid)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid', 'artic', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions                     <- emissions[!(emissions$pollutant %in% c('TB_PM10_SW', 'TB_PM25_SW')),]
emissions$pollutant           <- as.character(emissions$pollutant)
emissions[grep('pm25', tolower(emissions$pollutant)),'pollutant'] <- 'pm25'
emissions[grep('pm10', tolower(emissions$pollutant)),'pollutant'] <- 'pm10'
emissions$gridid            <- as.character(emissions$gridid)
emissions$grid_exactcut_id  <- as.character(emissions$grid_exactcut_id)
emissions$dotref            <- as.character(emissions$dotref)
emissions$pollutant         <- tolower(emissions$pollutant)
emissions <- aggregate(total_emissions ~ gridid + toid + grid_exactcut_id + dotref + length + pollutant, data=emissions, FUN=sum)
head(emissions)
tail(emissions)
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2013_LAEI_V117.csv')
names(emissions)              <- tolower(names(emissions))
drop                          <- c('emissions', 'year', 'petrolcar', 'dieselcar', 'petrollgv', 'diesellgv', 'ltbus', 'coach', 'electriccar', 'electriclgv')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions$total_light_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car
emissions$total_heavy_emissions     <- emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$total_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car + emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$toid                <- as.character(emissions$toid)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid', 'artic', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions                     <- emissions[!(emissions$pollutant %in% c('TB_PM10_SW', 'TB_PM25_SW')),]
emissions$pollutant           <- as.character(emissions$pollutant)
emissions[grep('pm25', tolower(emissions$pollutant)),'pollutant'] <- 'pm25'
emissions[grep('pm10', tolower(emissions$pollutant)),'pollutant'] <- 'pm10'
emissions$gridid            <- as.character(emissions$gridid)
emissions$grid_exactcut_id  <- as.character(emissions$grid_exactcut_id)
emissions$dotref            <- as.character(emissions$dotref)
emissions$pollutant         <- tolower(emissions$pollutant)
emissions <- aggregate(cbind(total_emissions, total_light_emissions, total_heavy_emissions) ~ gridid + toid + grid_exactcut_id + dotref + length + pollutant, data=emissions, FUN=sum)
head(emissions)
traffic_flows             <- merge(traffic_flows, road_info, by.x = 'toid', by.y = 'toid')
rm(road_info)
grid_traffic              <- merge(traffic_flows, grid, by.x = c('grid_exactcut_id'), by.y = c('grid_exact_cut'))
rm(traffic_flows)
grid_traffic              <- grid_traffic[order(grid_traffic$toid),]
grid_traffic <- aggregate(data = grid_traffic, FUN=mean, cbind(speed, total_vehicles, total_light, total_heavy)~ easting+northing+toid+desc_term)
emissions_grids              <- merge(emissions, grid, by.x = 'grid_exactcut_id', by.y = 'grid_exact_cut')
rm(emissions)
emissions_grids              <- emissions_grids[order(emissions_grids$toid),]
head(emissions_grids)
all_data                <- merge(emissions_grids, grid_traffic, by.x = c('toid', 'easting', 'northing'), by.y = c('toid', 'easting', 'northing'))
rm(grid, grid_traffic, emissions_grids,drop)
ukgrid = "+init=epsg:27700"
one_km_emissions <- aggregate(data = all_data, total_emissions ~ pollutant + easting + northing, FUN=sum)
sources          <- as.character((unique(one_km_emissions$pollutant)))
for (i in 1:length(sources)) {
temp              <- one_km_emissions[one_km_emissions$pollutant == sources[i],]
coordinates(temp) <- ~ easting + northing
temp$pollutant    <- NULL
gridded(temp)     <- TRUE
proj4string(temp) <- CRS(ukgrid)
temp              <- raster(temp)
names(temp)       <- tolower(sources[i])
if (i == 1) { one_km_emissions_raster <- temp} else {one_km_emissions_raster <- stack(one_km_emissions_raster, temp)}
}
ten_km_emissions_raster  <- aggregate(one_km_emissions_raster, fact = 10, fun=sum)
rm(one_km_emissions, one_km_emissions_raster, temp, i)
ten_km_emissions_polygons <- rasterToPolygons(ten_km_emissions_raster)
coordinates(all_data)           <- ~ easting + northing
proj4string(all_data)           <- CRS(ukgrid)
ten_km_emissions_polygons$id                            <- row.names(ten_km_emissions_polygons)
result                                                  <- point.in.poly(all_data, ten_km_emissions_polygons)
result                                                  <- data.frame(result)
result$ten_km_contribution                              <- NA
result[result$pollutant == 'no2',]$ten_km_contribution    <- result[result$pollutant == 'no2',]$total_emissions    / result[result$pollutant == 'no2',]$no2
result[result$pollutant == 'nox',]$ten_km_contribution    <- result[result$pollutant == 'nox',]$total_emissions    / result[result$pollutant == 'nox',]$nox
result[result$pollutant == 'pm10',]$ten_km_contribution   <- result[result$pollutant == 'pm10',]$total_emissions   / result[result$pollutant == 'pm10',]$pm10
result[result$pollutant == 'pm25',]$ten_km_contribution   <- result[result$pollutant == 'pm25',]$total_emissions   / result[result$pollutant == 'pm25',]$pm25
rm(all_data)
result <- result[result$total_emissions > 0,]
result <- result[!(result$desc_term %in% c('Alley', 'Private Road - Publicly Accessible', 'Pedestrianised Street')),]
training_index <- sample(nrow(result), round(nrow(result) * 0.8,0))
training_data <- result[training_index,]
testing_data <- result[-training_index,]
models <- list()
counter <- 1
road_types <- unique(as.character(training_data$desc_term))
model_results <- data.frame(pollutant = NA,
rsquared = NA, stringsAsFactors = F)
for (i in 1:length(sources)) {
model <- lm(total_emissions ~ total_vehicles*speed*length + desc_term,
data=training_data[training_data$pollutant == sources[i],])
# model <- lm(total_emissions ~ total_vehicles*speed*length,
#           data=training_data[training_data$pollutant == sources[i],])
models[[counter]] <- model
model_results[counter,] <- c(sources[i],  round(summary(models[[counter]])$adj.r.squared,5) )
counter <- counter + 1
rm(model)
}
head(model_results)
models <- list()
counter <- 1
road_types <- unique(as.character(training_data$desc_term))
model_results <- data.frame(pollutant = NA,
rsquared = NA, stringsAsFactors = F)
for (i in 1:length(sources)) {
model <- lm(total_emissions ~ total_light*total_heavy*speed*length + desc_term,
data=training_data[training_data$pollutant == sources[i],])
# model <- lm(total_emissions ~ total_vehicles*speed*length,
#           data=training_data[training_data$pollutant == sources[i],])
models[[counter]] <- model
model_results[counter,] <- c(sources[i],  round(summary(models[[counter]])$adj.r.squared,5) )
counter <- counter + 1
rm(model)
}
model_results
testing_data$prediction <- NA
for (i in 1:length(sources)) {
testing_data[testing_data$pollutant == sources[i],'prediction'] <-   predict(models[[i]], testing_data[testing_data$pollutant == sources[i],])
}
no2 <- ggplot(testing_data[testing_data$pollutant == 'no2',], aes(total_emissions, prediction, colour=desc_term)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
nox <- ggplot(testing_data[testing_data$pollutant == 'nox',], aes(total_emissions, prediction, colour=desc_term)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm10 <- ggplot(testing_data[testing_data$pollutant == 'pm10',], aes(total_emissions, prediction, colour=desc_term)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
pm25 <- ggplot(testing_data[testing_data$pollutant == 'pm25',], aes(total_emissions, prediction, colour=desc_term)) +
geom_point(size=2, alpha=0.3, aes(colour=desc_term, stroke=0)) +
theme(legend.position="bottom",
legend.title = element_blank()) +
facet_wrap(.~desc_term, scales='free') +
geom_abline(slope=1, intercept=0)
no2
modStats(testing_data[testing_data$pollutant == 'no2',], mod = 'prediction', obs = 'total_emissions')
model_rsults
model_results
grid        <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/z_GridsForJames.csv')
grid        <- grid[,c('GridIdEx', 'Easting', 'Northing')]
names(grid) <- c('grid_exact_cut', 'easting', 'northing')
traffic_flows                 <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/TrafficFlows/Major_WithAdjustedIbus_AADT/z_AADT_ExactCut_WithIbus_v1201_2025.csv')
names(traffic_flows)          <- tolower(names(traffic_flows))
drop                          <- c('year', 'location_exactcut', 'boroughname_exactcut', 'tlrn', 'irr', 'motorwaynumber', 'petrolcar', 'dieselcar', 'electriccar', 'petrollgv', 'diesellgv', 'electriclgv', 'ltbus', 'coach')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows$toid            <- as.character(traffic_flows$toid)
traffic_flows$total_vehicles  <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car + traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle +     traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
traffic_flows$total_light     <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car)
traffic_flows$total_heavy     <- (traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle + traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
getwd()
setwd("C:/Users/stwb3498/Documents/Github/flows_speeds_emissions_relationships")
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2025_LAEI_v12019.csv')
names(emissions)              <- tolower(names(emissions))
drop                          <- c('emissions', 'year', 'petrolcar', 'dieselcar', 'petrollgv', 'diesellgv', 'ltbus', 'coach', 'electriccar', 'electriclgv')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions$total_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car + emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$toid                <- as.character(emissions$toid)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid', 'artic', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions                     <- emissions[!(emissions$pollutant %in% c('TB_PM10_SW', 'TB_PM25_SW')),]
grid        <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/z_GridsForJames.csv')
grid        <- grid[,c('GridIdEx', 'Easting', 'Northing')]
names(grid) <- c('grid_exact_cut', 'easting', 'northing')
###
traffic_flows                 <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/TrafficFlows/Major_WithAdjustedIbus_AADT/z_AADT_ExactCut_WithIbus_v1201_2025.csv')
names(traffic_flows)          <- tolower(names(traffic_flows))
drop                          <- c('year', 'location_exactcut', 'boroughname_exactcut', 'tlrn', 'irr', 'motorwaynumber', 'petrolcar', 'dieselcar', 'electriccar', 'petrollgv', 'diesellgv', 'electriclgv', 'ltbus', 'coach')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows$toid            <- as.character(traffic_flows$toid)
traffic_flows$total_vehicles  <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car + traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle +     traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
traffic_flows$total_light     <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car)
traffic_flows$total_heavy     <- (traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle + traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
###
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
####
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2025_LAEI_v12019.csv')
grid        <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/z_GridsForJames.csv')
grid        <- grid[,c('GridIdEx', 'Easting', 'Northing')]
names(grid) <- c('grid_exact_cut', 'easting', 'northing')
###
traffic_flows                 <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/TrafficFlows/Major_WithAdjustedIbus_AADT/z_AADT_ExactCut_WithIbus_v1201_2025.csv')
names(traffic_flows)          <- tolower(names(traffic_flows))
drop                          <- c('year', 'location_exactcut', 'boroughname_exactcut', 'tlrn', 'irr', 'motorwaynumber', 'petrolcar', 'dieselcar', 'electriccar', 'petrollgv', 'diesellgv', 'electriclgv', 'ltbus', 'coach')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
traffic_flows$toid            <- as.character(traffic_flows$toid)
traffic_flows$total_vehicles  <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car + traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle +     traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
traffic_flows$total_light     <- (traffic_flows$motorcycle + traffic_flows$taxi + traffic_flows$car)
traffic_flows$total_heavy     <- (traffic_flows$busandcoach + traffic_flows$lgv + traffic_flows$rigid2axle + traffic_flows$rigid3axle + traffic_flows$rigid4axle + traffic_flows$artic3axle + traffic_flows$artic5axle + traffic_flows$artic6axle)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
traffic_flows                 <- traffic_flows[, !(names(traffic_flows) %in% drop)]
###
road_info                    <- read.csv('erg_roads_info.csv')
names(road_info)             <- tolower(names(road_info))
road_info                    <- road_info[,c('toid', 'desc_term')]
road_info$toid               <- as.character(road_info$toid)
####
emissions                     <- read.csv('X:/Projects/LAEI2013_TfL_Strategy/FilesForHerald4/EmissionsByLink/INPUT_RESULTS_LAEI_ExactCutIntersect_Major_2025_LAEI_v12019.csv')
names(emissions)              <- tolower(names(emissions))
drop                          <- c('emissions', 'year', 'petrolcar', 'dieselcar', 'petrollgv', 'diesellgv', 'ltbus', 'coach', 'electriccar', 'electriclgv')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions$total_light_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car
emissions$total_heavy_emissions     <- emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$total_emissions     <- emissions$motorcycle + emissions$taxi + emissions$car + emissions$busandcoach + emissions$lgv + emissions$rigid + emissions$artic + emissions$rigid2axle + emissions$rigid3axle + emissions$rigid4axle + emissions$artic3axle + emissions$artic5axle + emissions$artic6axle
emissions$toid                <- as.character(emissions$toid)
drop                          <- c('motorcycle', 'taxi', 'car', 'busandcoach', 'lgv', 'rigid', 'artic', 'rigid2axle', 'rigid3axle', 'rigid4axle', 'artic3axle', 'artic5axle', 'artic6axle')
emissions                     <- emissions[, !(names(emissions) %in% drop)]
emissions                     <- emissions[!(emissions$pollutant %in% c('TB_PM10_SW', 'TB_PM25_SW')),]
###
emissions$pollutant           <- as.character(emissions$pollutant)
emissions[grep('pm25', tolower(emissions$pollutant)),'pollutant'] <- 'pm25'
emissions[grep('pm10', tolower(emissions$pollutant)),'pollutant'] <- 'pm10'
emissions$gridid            <- as.character(emissions$gridid)
emissions$grid_exactcut_id  <- as.character(emissions$grid_exactcut_id)
emissions$dotref            <- as.character(emissions$dotref)
emissions$pollutant         <- tolower(emissions$pollutant)
emissions <- aggregate(cbind(total_emissions, total_light_emissions, total_heavy_emissions) ~ gridid + toid + grid_exactcut_id + dotref + length + pollutant, data=emissions, FUN=sum)
emissions <- emissions[emissions$total_emissions > 0,]
##
traffic_flows             <- merge(traffic_flows, road_info, by.x = 'toid', by.y = 'toid')
rm(road_info)
##
grid_traffic              <- merge(traffic_flows, grid, by.x = c('grid_exactcut_id'), by.y = c('grid_exact_cut'))
rm(traffic_flows)
grid_traffic              <- grid_traffic[order(grid_traffic$toid),]
##
emissions_grids              <- merge(emissions, grid, by.x = 'grid_exactcut_id', by.y = 'grid_exact_cut')
rm(emissions)
emissions_grids              <- emissions_grids[order(emissions_grids$toid),]
##
all_data                <- merge(emissions_grids, grid_traffic, by.x = c('toid', 'easting', 'northing'), by.y = c('toid', 'easting', 'northing'))
rm(grid, grid_traffic, emissions_grids,drop)
##
all_data <- all_data[!(all_data$desc_term %in% c('Alley', 'Private Road - Publicly Accessible', 'Pedestrianised Street')),]
all_data <- all_data[all_data$pollutant %in% sources,]
head(all_data)
all_data$prediction <- NA
for (i in 1:length(sources)) {
all_data[all_data$pollutant == sources[i],'prediction'] <-   predict(models[[i]], all_data[all_data$pollutant == sources[i],])
}
sum(all_data[all_data$pollutant == 'no2' ,'total_light_emissions']) /
sum(result[result$pollutant == 'no2','total_heavy_emissions'])
lightsum(all_data[all_data$pollutant == 'no2' ,'total_heavy_emissions']) /
sum(result[result$pollutant == 'no2','total_heavy_emissions'])
sum(all_data[all_data$pollutant == 'no2' ,'total_heavy_emissions']) /
sum(result[result$pollutant == 'no2','total_heavy_emissions'])
thirteen_to_twentyfive_scale_no2_light  <- sum(all_data[all_data$pollutant == 'no2' ,'total_light_emissions']) /
sum(result[result$pollutant == 'no2','total_light_emissions'])
thirteen_to_twentyfive_scale_no2_heavy  <- sum(all_data[all_data$pollutant == 'no2' ,'total_heavy_emissions']) /
sum(result[result$pollutant == 'no2','total_heavy_emissions'])
thirteen_to_twentyfive_scale_nox_light  <- sum(all_data[all_data$pollutant == 'nox','total_light_emissions']) /
sum(result[result$pollutant == 'nox','total_light_emissions'])
thirteen_to_twentyfive_scale_nox_heavy  <- sum(all_data[all_data$pollutant == 'nox','total_heavy_emissions']) /
sum(result[result$pollutant == 'nox','total_heavy_emissions'])
thirteen_to_twentyfive_scale_pm10_light <- sum(all_data[all_data$pollutant == 'pm10','total_light_emissions']) /
sum(result[result$pollutant == 'pm10','total_light_emissions'])
thirteen_to_twentyfive_scale_pm10_heavy <- sum(all_data[all_data$pollutant == 'pm10','total_heavy_emissions']) /
sum(result[result$pollutant == 'pm10','total_heavy_emissions'])
thirteen_to_twentyfive_scale_pm25_light <- sum(all_data[all_data$pollutant == 'pm25','total_light_emissions']) /
sum(result[result$pollutant == 'pm25','total_light_emissions'])
thirteen_to_twentyfive_scale_pm25_heavy <- sum(all_data[all_data$pollutant == 'pm25','total_heavy_emissions']) /
sum(result[result$pollutant == 'pm25','total_heavy_emissions'])
head(training_data)
